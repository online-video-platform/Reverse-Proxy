# env domain_from_env;
# http {
    # Define a cache path
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=video_cache:10m max_size=10g inactive=24h use_temp_path=off;
    # The Nginx server block configuration
    server {
        listen 80;
        server_name _;

        # Define the cache zone
        proxy_cache video_cache;

        # Enable caching
        proxy_cache_valid 200 206 1h;  # Cache valid responses for 1 hour
        proxy_cache_valid 404 1m;      # Cache 404 responses for 1 minute
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;

        # Set headers to respect caching
        add_header X-Proxy-Cache $upstream_cache_status;

        location / {
            # Define backend
            set $backend "https://${DOMAIN_FROM_ENV}";
            resolver 1.1.1.1 ipv6=off;
            proxy_pass $backend$request_uri;

            # Cache only video types
            proxy_cache_bypass $http_cache_control;
            proxy_cache_key "$scheme$request_method$host$request_uri";

            # Define caching only for video files
            set $skip_cache 1;
            if ($uri ~* \.(mp4|avi|mov|mkv|webm|flv|wmv|mpeg|mpg)$) {
                set $skip_cache 0;
            }

            proxy_no_cache $skip_cache;
            proxy_cache_bypass $skip_cache;

            # Proxy settings
            proxy_set_header Host ${DOMAIN_FROM_ENV};
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # SSL settings (if connecting to HTTPS backend)
            proxy_ssl_server_name on;
            proxy_ssl_protocols TLSv1.2 TLSv1.3;
            proxy_ssl_ciphers HIGH:!aNULL:!MD5;
        }
    }
# }